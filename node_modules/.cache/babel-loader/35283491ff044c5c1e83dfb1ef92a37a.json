{"remainingRequest":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/babel-loader/lib/index.js!/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/stats.vue?vue&type=template&id=60750375&scoped=true","dependencies":[{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/stats.vue","mtime":1619822406081},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlU3RhdGljVk5vZGUgYXMgX2NyZWF0ZVN0YXRpY1ZOb2RlLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi02MDc1MDM3NSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNjA3NTAzNzUiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiaGVybyBoYXMtYmFja2dyb3VuZC1saW5rLWxpZ2h0IGlzLWhhbGZoZWlnaHQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAiY29sdW1ucyBpcy1jZW50ZXJlZCIKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJjb2x1bW4gaXMtMyIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJib3ggaGFzLWJhY2tncm91bmQtZGFyayIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgcmVmOiAic2VsZWN0b3IiCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAic2VsZWN0IGlzLWRhcmsgbXgtMSIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAgcmVmOiAiWWVhciIKfTsKCnZhciBfaG9pc3RlZF84ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgib3B0aW9uIiwgbnVsbCwgIlllYXIiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIHsKICB2YWx1ZTogIjIwMjEiCn0sICIyMDIxIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAic2VsZWN0IG14LTIgaXMtZGFyayIKfTsKdmFyIF9ob2lzdGVkXzExID0gewogIHJlZjogIk1vbnRoIgp9OwoKdmFyIF9ob2lzdGVkXzEyID0gLyojX19QVVJFX18qL19jcmVhdGVTdGF0aWNWTm9kZSgiPG9wdGlvbiBkYXRhLXYtNjA3NTAzNzU+TW9udGg8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiMVwiIGRhdGEtdi02MDc1MDM3NT5KYW48L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiMlwiIGRhdGEtdi02MDc1MDM3NT5GZWI8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiM1wiIGRhdGEtdi02MDc1MDM3NT5NYXI8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiNFwiIGRhdGEtdi02MDc1MDM3NT5BcHI8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiNVwiIGRhdGEtdi02MDc1MDM3NT5NYXk8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiNlwiIGRhdGEtdi02MDc1MDM3NT5KdW48L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiN1wiIGRhdGEtdi02MDc1MDM3NT5KdWw8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiOFwiIGRhdGEtdi02MDc1MDM3NT5BdWc8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiOVwiIGRhdGEtdi02MDc1MDM3NT5TZXA8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiMTBcIiBkYXRhLXYtNjA3NTAzNzU+T2N0PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cIjExXCIgZGF0YS12LTYwNzUwMzc1Pk5vdjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCIxMlwiIGRhdGEtdi02MDc1MDM3NT5EZWM8L29wdGlvbj4iLCAxMyk7Cgp2YXIgX2hvaXN0ZWRfMjUgPSB7CiAgY2xhc3M6ICJzZWxlY3QgbXgtMiBpcy1kYXJrICIKfTsKdmFyIF9ob2lzdGVkXzI2ID0gewogIHJlZjogIkRheSIKfTsKCnZhciBfaG9pc3RlZF8yNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIG51bGwsICJEYXkiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMjggPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJzcGFuIiwgbnVsbCwgIiBTdWJtaXQgIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzI5ID0gewogIGNsYXNzOiAiaGFzLXRleHQtZGFuZ2VyIGhhcy10ZXh0LXdlaWdodC1ib2xkIGhhcy10ZXh0LWNlbnRlcmVkIG15LTMiLAogIHJlZjogImVycm9yTWVzc2FnZSIKfTsKCnZhciBfaG9pc3RlZF8zMCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlU3RhdGljVk5vZGUoIjxkaXYgY2xhc3M9XCJjb2x1bW5zXCIgZGF0YS12LTYwNzUwMzc1PjxkaXYgY2xhc3M9XCJjb2x1bW4gaXMtMVwiIGRhdGEtdi02MDc1MDM3NT48L2Rpdj48ZGl2IGNsYXNzPVwiY29sdW1uIG14LTUgaXMtNVwiIGRhdGEtdi02MDc1MDM3NT48ZGl2IGNsYXNzPVwiZ3JhcGhWaXNpdG9yc1wiIGRhdGEtdi02MDc1MDM3NT48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTFcIiBkYXRhLXYtNjA3NTAzNzU+PC9kaXY+PGRpdiBjbGFzcz1cImNvbHVtbiBteC0xIGlzLTRcIiBkYXRhLXYtNjA3NTAzNzU+PGRpdiBpZD1cImdyYXBoVGltZXNwZW50XCIgZGF0YS12LTYwNzUwMzc1PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJjb2x1bW4gaXMtMVwiIGRhdGEtdi02MDc1MDM3NT48L2Rpdj48L2Rpdj4iLCAxKTsKCnZhciBfaG9pc3RlZF8zMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNlY3Rpb24iLCB7CiAgY2xhc3M6ICJoZXJvIGhhcy1iYWNrZ3JvdW5kLWxpbmstbGlnaHQgaXMtaGFsZmhlaWdodCIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgU2VsZWN0IG9wdGlvbnMgIiksIF9jcmVhdGVWTm9kZSgic2VjdGlvbiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgU2VsZWN0IGZvciB0aGUgeWVhciAiKSwgX2NyZWF0ZVZOb2RlKCJzZWxlY3QiLCBfaG9pc3RlZF83LCBbX2hvaXN0ZWRfOCwgX2hvaXN0ZWRfOV0sIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBTZWxlY3QgZm9yIHRoZSBtb250aCAiKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMCwgW19jcmVhdGVWTm9kZSgic2VsZWN0IiwgX2hvaXN0ZWRfMTEsIFtfaG9pc3RlZF8xMl0sIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBTZWxlY3QgZm9yIHRoZSBkYXkod2lsbCBiZSBkeW5hbWljYWxseSBsb2FkZWQgZGVwZW5kaW5nIG9uIHRoZSBtb250aCBjaG9zZW4pICIpLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzI1LCBbX2NyZWF0ZVZOb2RlKCJzZWxlY3QiLCBfaG9pc3RlZF8yNiwgW19ob2lzdGVkXzI3LCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJG9wdGlvbnMuZ2V0RGF5cygpLCBmdW5jdGlvbiAoaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygib3B0aW9uIiwgewogICAgICBrZXk6IGluZGV4LAogICAgICB2YWx1ZTogaW5kZXgKICAgIH0sIF90b0Rpc3BsYXlTdHJpbmcoaW5kZXgpLCA5CiAgICAvKiBURVhULCBQUk9QUyAqLwogICAgLCBbInZhbHVlIl0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICldKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIFN1Ym1pdCBidXR0b24gIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJidXR0b24gbXgtMSAgaXMtZGFyayIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnN1Ym1pdCgpOwogICAgfSkKICB9LCBbX2hvaXN0ZWRfMjhdKSwgX2NyZWF0ZVZOb2RlKCJwIiwgX2hvaXN0ZWRfMjksIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICldKV0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBHcmFwaCBwbGFjZW1lbnQgd2l0aCBjb2x1bW5zIHNwYWNpbmcgYmV0d2VlbiAiKSwgX2hvaXN0ZWRfMzBdKSwgX2hvaXN0ZWRfMzFdLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0pOw=="},{"version":3,"sources":["/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/stats.vue"],"names":[],"mappings":"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","sourcesContent":["// https://www.tutorialspoint.com/How-to-get-a-number-of-days-in-a-specified-month-using-JavaScript\r\n// Bulma documentation was used to help create the select\r\n<template>\r\n    <!-- Select options -->\r\n    <section class=\"hero has-background-link-light is-halfheight\">\r\n        <div class=\"columns is-centered\">\r\n            <div class=\"column is-3\">\r\n                <div class=\"box has-background-dark\">\r\n                    <div ref=\"selector\">\r\n                        <div class=\"select is-dark mx-1\">\r\n                        <!-- Select for the year -->\r\n                            <select ref=\"Year\">\r\n                                <option>Year</option>\r\n                                <option value=\"2021\">2021</option>\r\n                            </select>\r\n                        </div>\r\n                        <!-- Select for the month -->\r\n                        <div class=\"select mx-2 is-dark\">\r\n                            <select ref=\"Month\">\r\n                                <option>Month</option>\r\n                                <option value=\"1\">Jan</option>\r\n                                <option value=\"2\">Feb</option>\r\n                                <option value=\"3\">Mar</option>\r\n                                <option value=\"4\">Apr</option>\r\n                                <option value=\"5\">May</option>\r\n                                <option value=\"6\">Jun</option>\r\n                                <option value=\"7\">Jul</option>\r\n                                <option value=\"8\">Aug</option>\r\n                                <option value=\"9\">Sep</option>\r\n                                <option value=\"10\">Oct</option>\r\n                                <option value=\"11\">Nov</option>\r\n                                <option value=\"12\">Dec</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <!-- Select for the day(will be dynamically loaded depending on the month chosen) -->\r\n                        <div class=\"select mx-2 is-dark \">\r\n                            <select ref=\"Day\">\r\n                                <option>Day</option>\r\n                                <option v-for=\"index in getDays()\" v-bind:key=\"index\" :value=\"index\">{{index}}</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <!-- Submit button -->\r\n                        <div class=\"button mx-1  is-dark\" v-on:click=\"submit()\" >\r\n                            <span>\r\n                                Submit\r\n                            </span>\r\n                        </div>\r\n                        <p class=\"has-text-danger has-text-weight-bold has-text-centered my-3\" ref=\"errorMessage\"></p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- Graph placement with columns spacing between -->\r\n        <div class =\"columns\">\r\n            <div class =\"column is-1\">\r\n\r\n            </div>\r\n            <div class =\"column mx-5 is-5\">\r\n                <div class =\"graphVisitors\">\r\n\r\n                </div>\r\n            </div>\r\n            <div class =\"column is-1\">\r\n\r\n            </div>\r\n            <div class =\"column mx-1 is-4\">\r\n                <div id =\"graphTimespent\">\r\n\r\n                </div>\r\n            </div>\r\n            <div class =\"column is-1\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </section>\r\n    <section class=\"hero has-background-link-light is-halfheight\">\r\n    </section>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport Plotly from \"plotly.js/dist/plotly\";\r\n\r\n// importing axios\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n// importing d3\r\n// https://dev.to/andre347/d3js-and-vuejs--30c8 link taught how to import d3 in vuejs\r\n// https://plotly.com/javascript/line-charts/\r\nimport * as d3 from 'd3';\r\nexport default{\r\n\r\n    // initailizing variables\r\n    data(){\r\n        return{\r\n            Year: null,\r\n            Month: null,\r\n            Day: null,\r\n                \r\n        }\r\n    },\r\n    // Methods section\r\n    methods:{\r\n        // Makes a bargraph\r\n        makeVisitorsBarGraph(dict){\r\n            // Please note this d3 bargraph code was used from Saenthuran Vignarajah's labs  which was taken from Randy Fortiers lectures!\r\n        // Removes any previous bar graphs \r\n        d3.selectAll('svg').remove();\r\n        // initailizing graph variables such as margin, height etc...\r\n        const margin = 40;\r\n        const width = 600;\r\n        const height = 500;\r\n        const chartWidth = width - 2 * margin;\r\n        const chartHeight = height - 2 * margin;\r\n        // Colour scale\r\n        const colourScale = d3.scaleLinear()\r\n                                .domain([2,2])\r\n                                .range(['#00FF00','blue']);\r\n        // X axis \r\n        const xScale = d3.scaleBand() \r\n                            .domain(dict.map((data) => data.Day))\r\n                            .range([0, chartWidth])\r\n                            .padding(0.3);\r\n        // Y axis\r\n        const yScale = d3.scaleLinear()\r\n                            .domain([0, 10000])\r\n                            .range([chartHeight, 0]);\r\n        // creating svg and appending it to graphTimeSpent column \r\n        let svg = d3.select('.graphVisitors')\r\n                        .append('svg')\r\n                        \r\n                            .attr('width', width)\r\n                            .attr('height', height);\r\n        \r\n        // This is the title of the graph with some minor position tweeks \r\n        svg.append('text')\r\n                .attr('x', width / 2)\r\n                .attr('y', margin)\r\n                .attr('text-anchor', 'middle')\r\n                .text('Number of Visitors by day ');\r\n\r\n        // X axis title with some minor position tweeks\r\n        svg.append('text')\r\n                .attr('x', width / 2)\r\n                .attr('y', margin+455)\r\n                .attr('text-anchor', 'middle')\r\n                .text('Days');\r\n        // Y axis title with some position tweeks\r\n        svg.append('text')\r\n                .attr('transform','rotate(-90)')\r\n                .attr('x', width-850) \r\n                .attr('y', margin-35)\r\n                .attr('text-anchor', 'middle')\r\n                .text('Number of visitors');\r\n        // Creating agroup g for the bar graphs\r\n        let g = svg.append('g')\r\n                        .attr('transform', `translate(${margin}, ${margin})`);\r\n        // y-axis\r\n        g.append('g')\r\n            .call(d3.axisLeft(yScale));\r\n        \r\n        // x-axis\r\n        g.append('g')\r\n            .attr('transform', `translate(0, ${chartHeight})`)\r\n            .call(d3.axisBottom(xScale));\r\n        \r\n        let rectangles = g.selectAll('rect')\r\n            .data(dict)\r\n            .enter()\r\n                .append('rect')\r\n                    .attr('x', (data) => xScale(data.Day))\r\n    // eslint-disable-next-line no-unused-vars\r\n                    .attr('y', (data) => chartHeight)\r\n                    .attr('width', xScale.bandwidth())\r\n    // eslint-disable-next-line no-unused-vars\r\n                    .attr('height', (data) => 0)\r\n                    .attr('fill', (data) => colourScale(data.visitors))\r\n        \r\n        rectangles.transition()\r\n            .ease(d3.easeElastic)\r\n            .attr('height', (data) => chartHeight - yScale(data.visitors))\r\n            .attr('y', (data) => yScale(data.visitors))\r\n            .duration(1000)\r\n            .delay((data, index) => index * 50);\r\n           \r\n           \r\n        },\r\n        makeTimeSpentBarGraph(dict){\r\n        var xArray = []\r\n        var yArray = []\r\n        var zArray = []\r\n        var valuesArray = []\r\n    // Running a loop on the ditionary  and setting the values to the arrays\r\n        for(var i=0;i<dict.length;i++){\r\n            yArray[i] = dict[i]['Day']; \r\n            xArray[i] = dict[i]['timeSpent'];\r\n            zArray[i] = dict[i]['visitors'];\r\n            valuesArray[i] = i;\r\n        }\r\n\r\n        //setting the datapoints\r\n        var datapoints = {\r\n            x: yArray,\r\n            y: xArray,\r\n            type:'scatter'\r\n        };\r\n                //setting the datapoints\r\n\r\n        var datapoints2 = {\r\n            x: yArray,\r\n            y: zArray,\r\n            type:'markers'\r\n        };\r\n        // size and title of graph\r\n        var layout={\r\n            height:500,\r\n            width:500,\r\n            title:\"Time spent on website\"\r\n        }\r\n\r\n\r\n        // Setting a data variable which contains the data points, which will be used in the\r\n        // new plot generation\r\n        var data = [datapoints,datapoints2]\r\n\r\n        // Generating the new plot and adding it to the building space\r\n        Plotly.newPlot('graphTimespent', data, layout);\r\n           \r\n        },\r\n        getDays(){\r\n            var date = new Date();\r\n            var newDate = new Date(date.getFullYear(),date.getMonth()+1,0).getDate();\r\n            return newDate;\r\n        },\r\n        submit(){\r\n            //Removes any graphs thats there \r\n            d3.selectAll('svg').remove();\r\n            //For getting back end statistics\r\n            this.Year = this.$refs.Year.value;\r\n            this.Month = this.$refs.Month.value;\r\n            this.Day = this.$refs.Day.value;\r\n            if(this.Year == \"Year\" || this.Month == \"Month\"){\r\n                this.$refs.errorMessage.innerHTML = \"Please Have Year & Month Filled!\"\r\n            }else{\r\n                axios.post('http://localhost:4000/getData',{\r\n                    year: this.Year,\r\n                    month: this.Month,\r\n                    day: this.Day\r\n                })\r\n                .then((response)=>{\r\n                    var dict = []\r\n                    for(var i=0;i<response['data'].length;i++){\r\n                        dict[i] = {\r\n                            \"Day\":response['data'][i]['day'],\r\n                            \"timeSpent\":(response['data'][i]['timeSpent']/1000)/60,\r\n                            \"visitors\":response['data'][i]['visitors']\r\n                            \r\n                        }\r\n                        console.log(dict);\r\n                        \r\n                    }\r\n                    this.makeVisitorsBarGraph(dict)\r\n                    this.makeTimeSpentBarGraph(dict)\r\n                    },\r\n                    (error) =>{\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        }\r\n                    \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.box{\r\n    border-radius:0px 0px 10px 10px!important;\r\n}\r\n</style>"],"sourceRoot":""}]}