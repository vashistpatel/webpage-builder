{"remainingRequest":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/layouts.vue?vue&type=style&index=0&id=b8f0a642&lang=css","dependencies":[{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/layouts.vue","mtime":1619822406080},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNpbXBvcnRfYm94IGgxIHsKICBmb250LXNpemU6IDJlbTsKICBmb250LXdlaWdodDogYm9sZDsKfQojaW1wb3J0X2JveCBoMTpob3ZlciwKI2ltcG9ydF9ib3ggcDpob3ZlciwKI2ltcG9ydF9ib3ggYTpob3ZlciwKI2ltcG9ydF9ib3ggaW1nOmhvdmVyIHsKICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICBib3JkZXItcmFkaXVzOiA1cHg7Cn0KI2ltcG9ydF9ib3ggaDEsCiNpbXBvcnRfYm94IHAsCiNpbXBvcnRfYm94IGEsCiNpbXBvcnRfYm94IGltZyB7CiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgbWFyZ2luLXRvcDogMC41cmVtOwogIG1hcmdpbi1ib3R0b206IDAuNXJlbTsKICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7Cn0KLyogVGhlIGN1cnJlbnRseSBzZWxlY3RlZCBlbGVtZW50ICovCi5jdXJyZW50IHsKICBiYWNrZ3JvdW5kOiByZ2IoMjA2LCAyMDYsIDIwNik7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Ci8qIFRoaXMgY2xhc3MgaGlkZXMgYW4gZWxlbWVudCB3aGVuIGl0IGlzIGJlaW5nIGVkaXRlZCovCi5oaWRkZW4gewogIGRpc3BsYXk6IG5vbmU7Cn0KLyogVGhlc2UgY2xhc3NlcyBhcmUgdXNlZCB0byBhbGlnbiB0ZXh0ICovCi5hbGlnbi1sZWZ0IHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5hbGlnbi1jZW50cmUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKCn0KLmFsaWduLXJpZ2h0IHsKICB0ZXh0LWFsaWduOiByaWdodDsKfQouU0JTewogIGZsb2F0OmxlZnQKCn0KLyogVGhpcyBjbGFzcyBpcyB1c2VkIHRvIGV4cGFuZCB0aGUgbmF2YmFyIHNlY3Rpb24gd2hlbiB0aGUgdXNlciBpbnB1dHMgYSBsaW5rICovCi5leHBhbmQtbGluayB7CiAgd2lkdGg6IDM1cmVtOwp9Ci8qIFRoZXNlIGNsYXNzZXMgYXJlIHVzZWQgdG8gc2l6ZSBkaWZmZXJlbnQgaW1hZ2VzICovCi5TbWFsbCB7CiAgd2lkdGg6IDEwLjAlOwogIGhlaWdodDogYXV0bzsKfQouTWVkaXVtIHsKICB3aWR0aDogMjAuMCU7CiAgaGVpZ2h0OiBhdXRvOwp9Ci5MYXJnZSB7CiAgd2lkdGg6IDMwLjAlOwogIGhlaWdodDogYXV0bzsKfQovKiBUaGVzZSBjbGFzc2VzIGFyZSB1c2VkIHRvIGNoYW5nZSB0aGUgZm9udCBvZiBhbiBlbGVtZW50ICovCi5ib2xkLWZvbnQgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci5pdGFsaWMtZm9udCB7CiAgZm9udC1zdHlsZTogaXRhbGljOwp9Ci51bmRlcmxpbmUtZm9udCB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Cn0KCi8qIFRoaXMgY2xhc3MgaXMgdXNlZCB0byBhbGxvdyBtdWx0aXBsZSBsaW5lcyBpbiBhIG5hdmJhciBpdGVtICovCi53cmFwLXRleHQgewogIGZsZXgtd3JhcDogd3JhcDsKfQoKLm1vZGFsIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7Cn0KCi8qIFRoZXNlcyBjbGFzc2VzIGFyZSB1c2VkIHRvIGNoYW5nZSB0aGUgbG9vayBvZiBzYXZlIGFuZCBuZXcgcGFnZSBtb2RhbHMgKi8KLm1vZGFsLWNvbnRlbnQgewogIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7CiAgbWFyZ2luOiAxNSUgYXV0bzsKICBwYWRkaW5nOiAyMHB4OwogIHdpZHRoOiA4MCU7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKfQoKLm1vZGFsUG9zaXRpb24gewogIG1hcmdpbi10b3A6IC0xNCU7Cn0KCiNjb250ZW50IHsKICBtYXJnaW4tdG9wOiAzMCU7Cn0KCi8qIHVzZWQgdG8gZm9ybWF0IHRoZSBpbXBvcnQsIGV4cG9ydCwgY2FuY2VsIGJ1dHRvbnMgKi8KI2ZpbGUtaW1wb3J0IHsKICBtYXJnaW46IDA7CiAgbWFyZ2luLXJpZ2h0OiA3cHg7Cn0KI0V4cG9ydGluZywKI2ZpbGUtaW1wb3J0IHsKICBtYXJnaW4tdG9wOiBhdXRvOwogIG1hcmdpbi1ib3R0b206IGF1dG87Cn0KCiNleHBvcnRCdXR0b25zIHsKICBtYXJnaW4tdG9wOiAxMHB4Owp9CgovKiB0aGVzZSBjbGFzc2VzIGZvcm1hdHMgdGhlIGNhbmNlbCBhbmQgc2F2ZSBidXR0b24gd2l0aGluIHRoZSBuZXcgZmlsZSBtb2RhbCAqLwojY2FuY2VsTmV3RmlsZSB7CiAgbWFyZ2luLWxlZnQ6IDE1cHg7Cn0KI2NhbmNlbCB7CiAgbWFyZ2luLWxlZnQ6IDE1cHg7Cn0KCi8qIGZvcm1hdHMgdGhlICJEaXNwbGF5IENvZGUiIGJ1dHRvbiAqLwouYnV0dG9uIHsKICBtYXJnaW4tdG9wOiBhdXRvOwogIG1hcmdpbi1ib3R0b206IGF1dG87Cn0K"},{"version":3,"sources":["/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/layouts.vue"],"names":[],"mappings":"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","file":"/Users/vashistpatel/Desktop/majorgroupproject-vashist-s-team/src/views/layouts.vue","sourceRoot":"","sourcesContent":["<template>\n  <!-- https://bulma.io/documentation/components/navbar/ -->\n  <!-- show nav bar if in builderpage or Displaycode -->\n  <div v-show=\"navType\">\n    <nav class=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\n      <!-- Burger menu -->\n      <div class=\"navbar-brand\">\n        <a\n          role=\"button\"\n          class=\"navbar-burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <!-- Element bar -->\n      <div id=\"navbarLinks\" class=\"navbar-menu\">\n        <div class=\"navbar-start\">\n\n          <!--add new drop down-->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Add New... </a>\n            <div id=\"new\" class=\"navbar-dropdown\">\n              <a id=\"h1\" value=\"header\" class=\"navbar-item\"> Header </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"p\" value=\"paragraph\" class=\"navbar-item\"> Paragraph </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"a\" value=\"link\" class=\"navbar-item\"> Link </a>\n            </div>\n          </div>\n          <!-- Image element drop down -->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a id=\"new-image-link\" class=\"navbar-link\"> New Image... </a>\n            <div id=\"image\" class=\"navbar-dropdown\">\n              <a id=\"small-image\" class=\"navbar-item\"> Small </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"medium-image\" class=\"navbar-item\"> Medium </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"large-image\" class=\"navbar-item\"> Large </a>\n            </div>\n          </div>\n\n          <!-- Text Align drop down -->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Alignment </a>\n            <div id=\"align\" class=\"navbar-dropdown\">\n              <a id=\"align-left\" class=\"navbar-item\"> Left </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"align-centre\" class=\"navbar-item\"> Centre </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"align-right\" class=\"navbar-item\"> Right </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"SBS\" class=\"navbar-item\"> Side by Side </a>\n            </div>\n          </div>\n\n          <!-- Font Drop down -->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Font... </a>\n            <div id=\"apply-font\" class=\"navbar-dropdown\">\n              <a id=\"bold-font\" class=\"navbar-item\"> Bold </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"italic-font\" class=\"navbar-item\"> Italic </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"underline-font\" class=\"navbar-item\"> Underline </a>\n            </div>\n          </div>\n\n          <!-- chart drop down -->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a id=\"new-chart-link\" class=\"navbar-link\"> Charts... </a>\n            <div id=\"charts\" class=\"navbar-dropdown\">\n              <a id=\"scatter-plot-2d\" class=\"navbar-item\">\n                Scatter Plot (2D)\n              </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"bar-chart\" class=\"navbar-item\"> Bar Chart </a>\n              <hr class=\"navbar-divider\" />\n              <a id=\"scatter-plot-3d\" class=\"navbar-item\">\n                Scatter Plot (3D)\n              </a>\n            </div>\n          </div>\n\n          <!-- color selector drop down -->\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Color Selector </a>\n            <div id=\"new\" class=\"navbar-dropdown\">\n              <input type=\"color\" id=\"Colorchanger\" class=\"input\" />\n            </div>\n          </div>\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Text Colour </a>\n            <div id=\"new\" class=\"navbar-dropdown\">\n              <input type=\"color\" id=\"ColourText\" class=\"input\" />\n            </div>\n          </div>\n          <!-- <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> Side By Side </a>\n            <div id=\"new\" class=\"navbar-dropdown\">\n              <input type=\"color\" id=\"SBS\" class=\"input\" />\n            </div>\n          </div> -->\n        </div>\n\n        <!-- File option drop down -->\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\"> File </a>\n\n            <!-- https://bulma.io/documentation/form/file/ -->\n            <!-- create New File button -->\n            <div id=\"new\" class=\"navbar-dropdown\">\n              <div class=\"navbar-item\">\n                <div id=\"NewFile\" class=\"file is-white\" type=\"file\">\n                  <label class=\"file-label\">\n                    <span class=\"file-cta\">\n                      <span class=\"file-icon\">\n                        <i class=\"fas fa-file\"></i>\n                      </span>\n                      <span class=\"file-label\">New File</span>\n                    </span>\n                  </label>\n                </div>\n              </div>\n             \n              <!-- export button -->\n              <div class=\"navbar-item\">\n                <div id=\"Exporting\" class=\"file is-white\" type=\"file\">\n                  <label class=\"file-label\">\n                    <span class=\"file-cta\">\n                      <span class=\"file-icon\">\n                        <i class=\"fas fa-download\"></i>\n                      </span>\n                      <span class=\"file-label\">Export</span>\n                    </span>\n                  </label>\n                </div>\n              </div>\n \n              <!-- Import a file button -->\n              <div class=\"navbar-item\">\n                <div id=\"file-import\" class=\"file is-white\" type=\"file\">\n                  <label class=\"file-label\">\n                    <!-- https://bulma.io/documentation/form/file/ -->\n                    <input class=\"file-input\" type=\"file\" name=\"resume\" />\n                    <span class=\"file-cta\">\n                      <span class=\"file-icon\">\n                        <i class=\"fas fa-upload\"></i>\n                      </span>\n                      <span class=\"file-label\">Choose a file…</span>\n                    </span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!--Display code view button router-->\n        <div class=\"button is-dark\">\n          <router-link to=\"/display\" class=\"has-text-white\" v-on:click=\"updateSave()\">Display Code</router-link>\n        </div>\n\n        <!-- https://bulma.io/documentation/components/modal/ -->\n        <!-- modal for exporting file -->\n        <div id=\"exportModal\" class=\"modal\">\n          <div class=\"modalPosition\">\n            <div class=\"modal-content\" id=\"content\">\n\n              <!--file name input box-->\n              <input class=\"input\" type=\"text\" id=\"usergiven_filename\" placeholder=\"File Name\" />\n              <div id=\"exportButtons\">\n\n                <!--save and cancle buttons-->\n                <button class=\"button is-success\" type=\"save\" id=\"save\">Save</button>\n                <button class=\"button\" id=\"cancel\">Cancel</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- modal for new file warning -->\n        <div id=\"NewModal\" class=\"modal\">\n          <div class=\"modalPosition\">\n            <div class=\"modal-content\" id=\"content\">\n              <p class=\"title\">Warning!</p>\n              <!-- warning message -->\n              <p class=\"subtitle\" id=\"newFileMessage\"> By accepting this all work that has not been exported will be erased!</p>\n              <!-- accept and cancel buttons -->\n              <button class=\"button is-danger\" id=\"acceptNewFile\">Accept</button>\n              <button class=\"button\" id=\"cancelNewFile\">Cancel</button>\n            </div>\n          </div>\n        </div>\n\n        \n\n      </div>\n    </nav>\n  </div>\n</template>\n<script>\n// Importing Plotly -> https://plotly.com/nodejs/getting-started/\nimport Plotly from \"plotly.js/dist/plotly\";\n// Importing jQuery -> https://stackoverflow.com/questions/53355086/add-jquery-to-vue-cli-3\nimport jQuery from \"jquery\";\nconst $ = jQuery;\nwindow.$ = $;\n// A count variable to keep track of all the elements added to the builder page\nvar count = 0;\n// A variable to keep track of the currently selected element\nvar currentElement;\n// A function that will append a new element to the building space, depending on\n// the currently selected element and the type of element to be added\nfunction addElement(tag, name, newID, currentElement) {\n  // Creating the new element based on the tag that was passed to the function\n  let element = document.createElement(tag);\n  if (tag != \"div\") {\n    element.innerHTML = `[New ${name} element created]`;\n  }\n  element.id = `${name}${newID}`;\n  // If there is an element currently selected, append the new element after\n  // the currently selected element. Otherwise, append the element to the\n  // bottom of the page\n  if (currentElement) {\n    // https://www.w3schools.com/jquery/html_insertafter.asp\n    $(element).insertAfter(`#${currentElement}`);\n  } else {\n    document.querySelector(\"#import_box\").appendChild(element);\n  }\n}\n// A function that will append a new image to the building space, depending on\n// the currently selected element\nfunction addImage(size, url, newID, currentElement) {\n  // Creating the new image based on the size that was passed to the function\n  let image = document.createElement(\"img\");\n  image.src = url;\n  image.id = `image${newID}`;\n  image.className = `image ${size}`;\n  \n  \n  // If there is an element currently selected, append the image after the\n  // currently selected element. Otherwise, append the image to the bottom\n  // of the page\n  if (currentElement) {\n    // https://www.w3schools.com/jquery/html_insertafter.asp\n    $(image).insertAfter(`#${currentElement}`);\n  } else {\n    document.querySelector(\"#import_box\").appendChild(image);\n  }\n}\n\n// A function that will append a 2D scatter plot to the building space through\n// the use of Plotly -> https://plotly.com/javascript/\nfunction add2DPlot(newTitle, xVals, yVals, newID, currentElement) {\n  // Adding a new div for the chart\n  addElement(\"div\", \"div\", newID, currentElement);\n\n  // https://stackoverflow.com/questions/15677869/how-to-convert-a-string-of-numbers-to-an-array-of-numbers\n  // Converting the x and y input values to arrays\n  var xArray = xVals.split(\",\").map((x) => +x);\n  var yArray = yVals.split(\",\").map((x) => +x);\n\n  // Using the new x and y arrays to map the data points\n  var datapoints = {\n    x: xArray,\n    y: yArray,\n    mode: \"markers\",\n    type: \"scatter\",\n  };\n\n  // Setting the chart title\n  var layout = {\n    title: {\n      text: newTitle,\n    },\n  };\n\n  // Setting a data variable which contains the data points, which will be used in the\n  // new plot generation -> https://plotly.com/javascript/\n  var data = [datapoints];\n\n  // Generating the new plot and adding it to the building space\n  Plotly.newPlot(document.querySelector(`#div${count}`), data, layout);\n}\n\n// A function that will append a 2D scatter plot to the building space through\n// the use of Plotly\nfunction addBarChart(newTitle, xVals, yVals, newID, currentElement) {\n  // Adding a new div for the chart\n  addElement(\"div\", \"div\", newID, currentElement);\n\n  // https://stackoverflow.com/questions/15677869/how-to-convert-a-string-of-numbers-to-an-array-of-numbers\n  // Converting the x and y input values to arrays\n  var xArray = xVals.split(\",\");\n  var yArray = yVals.split(\",\").map((x) => +x);\n\n  // Using the new x and y arrays to create the data\n  var data = [\n    {\n      x: xArray,\n      y: yArray,\n      type: \"bar\",\n    },\n  ];\n\n  // Setting the chart title\n  var layout = {\n    title: {\n      text: newTitle,\n    },\n  };\n\n  // Generating the new plot and adding it to the building space\n  Plotly.newPlot(document.querySelector(`#div${count}`), data, layout);\n}\n\n// A function that will append a 2D scatter plot to the building space through\n// the use of Plotly -> https://plotly.com/javascript/\nfunction add3DPlot(newTitle, xVals, yVals, zVals, newID, currentElement) {\n  // Adding a new div for the chart\n  addElement(\"div\", \"div\", newID, currentElement);\n\n  // https://stackoverflow.com/questions/15677869/how-to-convert-a-string-of-numbers-to-an-array-of-numbers\n  // Converting the x, y and z input values to arrays\n  var xArray = xVals.split(\",\").map((x) => +x);\n  var yArray = yVals.split(\",\").map((x) => +x);\n  var zArray = zVals.split(\",\").map((x) => +x);\n\n  // Using the new x and y arrays to map the data points\n  var datapoints = {\n    x: xArray,\n    y: yArray,\n    z: zArray,\n    mode: \"markers\",\n    marker: {\n      size: 12,\n      line: {\n        color: \"rgb(204, 204, 204)\",\n        width: 1,\n      },\n      opacity: 0.8,\n    },\n    type: \"scatter3d\",\n  };\n\n  // Setting the chart title\n  var layout = {\n    margin: {\n      l: 0,\n      r: 0,\n      b: 0,\n      t: 0,\n    },\n  };\n\n  // Setting a data variable which contains the data points, which will be used in the\n  // new plot generation\n  var data = [datapoints];\n\n  // Generating the new plot and adding it to the building space\n  Plotly.newPlot(document.querySelector(`#div${count}`), data, layout);\n}\n\nexport default {\n  //load functions\n  mounted: function () {\n    this.importFile();\n    this.exportFile();\n    this.features();\n    this.mobilejs();\n    this.newFile();\n    this.reloadWarning();\n  },\n  computed: {\n    navType() {\n      \n      return this.$store.state.navType;\n    },\n  },\n  methods: {\n    //import file\n    importFile() {\n      const fileInput = document.querySelector(\"#file-import input[type=file]\");\n      //when file input gets a new value\n\n      fileInput.onchange = () => {\n        // https://www.digitalocean.com/community/tutorials/vuejs-file-reader-component\n        const reader = new FileReader();\n        var workspace = document.querySelector(\"#import_box\");\n\n        //puts code from file on to the workspace\n        reader.onload = (reading) => {\n          workspace.innerHTML = reading.target.result;\n        };\n\n        //reads texts from file \n        reader.readAsText(fileInput.files[0]);\n      };\n    },\n\n\n    //export File\n  exportFile() {\n      const exportingButton = document.querySelector(\"#Exporting\");\n      \n      //export button action\n      exportingButton.onclick = () => {\n    \n        //set variables to ids  \n        var modal = document.getElementById(\"exportModal\");\n        var save = document.getElementById(\"save\");\n        var cancel = document.getElementById(\"cancel\");\n        \n        //activate the modal\n        modal.setAttribute(\"class\", \"modal is-active\");\n        modal.style.display = \"block\";\n        \n        //close modal button\n        cancel.onclick = function () {\n          modal.style.display = \"none\";\n        };\n\n        //save button function\n        save.onclick = function () {\n            \n          //string of css that needs to be exported \n          var styleSheet = `#import_box h1 {\n                                        font-size: 2em;\n                                        font-weight: bold;\n                                    }\n                                    #import_box *:hover {\n                                        border: 1px solid black;\n                                        border-radius: 5px;\n                                    }\n                                    #import_box * {\n                                        border: 1px solid transparent;\n                                        margin-top: 0.5rem;\n                                        margin-bottom: 0.5rem;\n                                        word-wrap: break-word;\n                                    }\n\n                                    /* This class hides an element when it is being edited*/\n                                    .hidden {\n                                        display: none;\n                                    }\n                                    /* These classes are used to align text */\n                                    .align-left {\n                                        text-align: left;\n                                    }\n                                    .align-centre {\n                                        text-align: center;\n                                    }\n                                    .align-right {\n                                        text-align: right;\n                                    }\n                                    /* This class is used to expand the navbar section when the user inputs a link */\n                                    .expand-link {\n                                        width: 35rem;\n                                    }\n                                    /* These classes are used to size different images */\n                                    .Small {\n                                        width: 33.33%;\n                                        height: auto;\n                                    }\n                                    .Medium {\n                                        width: 66.66%;\n                                        height: auto;\n                                    }\n                                    .Large {\n                                        width: 100%;\n                                        height: auto;\n                                    }\n                                    /* These classes are used to change the font of an element */\n                                    .bold-font {\n                                        font-weight: bold;\n                                    }\n                                    .italic-font {\n                                        font-style: italic;\n                                    }\n                                    .underline-font {\n                                        text-decoration: underline;\n                                    }\n                                    `;\n          //work space id\n          const workspace = document.querySelector(\"#import_box\");\n          var temp = \"https://cdn.plot.ly/plotly-latest.min.js\"\n          \n          //https://stackoverflow.com/questions/1659749/script-tag-in-javascript-string\n          var header = \"<html><head><script src=\"+ temp + \"></\"+\"script></head><body>\";\n          //chosen file name\n          var fileName = document.getElementById(\"usergiven_filename\");\n          \n         //create an export file\n         //https://www.geeksforgeeks.org/how-to-trigger-a-file-download-when-clicking-an-html-button-or-javascript/\n          var exporter = document.createElement(\"a\");\n         //set export attributes\n          exporter.setAttribute(\n            \"href\",\n            \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent( header+\n                workspace.innerHTML + \"</body>\" +\"<style>\" + styleSheet + \"</style>\" + \"</html>\"\n              )\n          );\n          //make exporter file downloadable\n          exporter.setAttribute(\"download\", fileName.value + \".html\");\n          exporter.click();\n          \n          //close modal\n          modal.style.display = \"none\";\n        };\n      };\n    },\n\n    //Create new File\n    newFile() {\n      \n      const newFileButton = document.querySelector(\"#NewFile\");\n      \n      //newfile button function\n      newFileButton.onclick = () => {\n       //set variables to ids \n        var modal = document.getElementById(\"NewModal\");\n        var accept = document.getElementById(\"acceptNewFile\");\n        var cancel = document.getElementById(\"cancelNewFile\");\n\n       //make modal active\n        modal.setAttribute(\"class\", \"modal is-active\");\n        modal.style.display = \"block\";\n\n       //close modal button function\n        cancel.onclick = function () {\n          modal.style.display = \"none\";\n        };\n\n       //accept button function\n        accept.onclick = () => {\n          const workspace = document.querySelector(\"#import_box\");\n          //set workspace to empty\n          workspace.innerHTML = \" \";\n\n          //clear save data\n          this.updateSave();\n          \n          //close modal\n          modal.style.display = \"none\";\n        };\n      };\n    },\n\n    //save file\n    updateSave() {\n      //save workspace data\n      const fileInput = document.querySelector(\"#import_box\");\n      this.$store.commit(\"setCode\", fileInput.innerHTML);\n    },\n\n    features() {\n      // Adding the new element that was clicked from the bulma navbar menu. If there\n      // is a current element selected, append the new element underneath the current\n      // element\n      $(\"#new a\").click(function () {\n        count++;\n        addElement(\n          $(this).attr(\"id\"),\n          $(this).attr(\"value\"),\n          count,\n          currentElement\n        );\n      });\n      // When an element is clicked, set it to the current element\n      $(document).on(\"click\", \"#import_box *\", function () {\n        \n        $(\"#import_box *\").removeClass(\"current\");\n        currentElement = $(this).attr(\"id\");\n        $(this).addClass(\"current\");\n      });\n      // If the delete key (del) is pressed, delete the current element and\n      // set the current element to undefined\n      $(document).on(\"keyup\", function (key) {\n        let keyPressed = key.which;\n        if (keyPressed == 46) {\n          $(`#${currentElement}`).remove();\n          currentElement = \"\";\n        }\n      });\n      $(\"#Colorchanger\").change(function () {\n        \n        var color = $(\"#Colorchanger\").val();\n        $(`#${currentElement}`).removeClass(\"current\");\n        $(`#${currentElement}`).css(\"background\", color);\n      });\n\n      $(\"#ColourText\").change(function () {\n     \n        var color = $(\"#ColourText\").val();\n        $(`#${currentElement}`).removeClass(\"current\");\n        $(`#${currentElement}`).css(\"color\", color);\n      });\n      // $(\"#SBS\").change(function () {\n      //   $(`#${currentElement}`).removeClass(\"current\");\n      //   $(`#${currentElement}`).css(\"display:inline-block\");\n      // });\n      // Align the selected element's text when one of the options under align is\n      // selected in the builder navbar\n      $(\"#align a\").click(function () {\n\n        //check if current element is an image\n        if(($(`#${currentElement}`)).hasClass(\"image\") == true){\n          \n          //if align left\n          if($(this).attr(\"id\")==\"align-left\"){\n            //translate to the left\n            ($(`#${currentElement}`)).css(\"margin-left\", \"0%\");\n            \n          //if centered  \n          }else if($(this).attr(\"id\")==\"align-centre\"){\n            //check if it's a small image\n            if(($(`#${currentElement}`).attr(\"class\")) == \"image Small current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"45%\");\n              \n            //check if its a medium image\n            }else if (($(`#${currentElement}`).attr(\"class\")) == \"image Medium current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"40%\");\n           \n            //check if its a large image\n            }else if (($(`#${currentElement}`).attr(\"class\")) == \"image Large current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"35%\");\n            }\n          \n          //if align-right\n          }else if($(this).attr(\"id\")==\"align-right\"){\n            //check if it's a small image\n            if(($(`#${currentElement}`).attr(\"class\")) == \"image Small current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"90%\");\n              \n            //check if its a medium image\n            }else if (($(`#${currentElement}`).attr(\"class\")) == \"image Medium current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"80%\");\n           \n            //check if its a large image\n            }else if (($(`#${currentElement}`).attr(\"class\")) == \"image Large current\"){\n              //translate to the left\n              ($(`#${currentElement}`)).css(\"margin-left\", \"70%\");\n            }\n          }\n\n        //align any other element\n        }else{\n        $(`#${currentElement}`).removeClass(\n          \"align-left align-centre align-right SBS\"\n        );\n        $(`#${currentElement}`).addClass($(this).attr(\"id\"));\n        }\n\n        \n\n\n      });\n      // Apply the specified font to the selected element\n      $(\"#apply-font a\").click(function () {\n        if ($(`#${currentElement}`).hasClass($(this).attr(\"id\"))) {\n          $(`#${currentElement}`).removeClass($(this).attr(\"id\"));\n        } else {\n          $(`#${currentElement}`).addClass($(this).attr(\"id\"));\n        }\n      });\n      // When an element in the builder is double-clicked, add a text field where the\n      // user can edit the inner-html of that element\n      $(document).on(\"dblclick\", \"#import_box *\", function () {\n        // Checking to see if we already have a text area to prevent duplicate\n        // textareas from appearing\n        if (\n          $(this).attr(\"id\") != \"tempArea\" &&\n          $(this).hasClass(\"image\") == false &&\n          $(this).hasClass(\"plotly\") == false &&\n          $(this).is(\"svg\") == false &&\n          $(this).is(\"rect\") == false\n        ) {\n          // Hidding the current element\n          let currentElement = $(this);\n          currentElement.addClass(\"hidden\");\n          // Adding a temporary textarea for editing\n          let tempTextArea = document.createElement(\"textarea\");\n          tempTextArea.innerHTML = $(this).html();\n          tempTextArea.id = \"tempArea\";\n          tempTextArea.className = \"textarea has-fixed-size\";\n          // Insert the temporary textarea for editing\n          // https://www.w3schools.com/jquery/html_insertafter.asp\n          $(tempTextArea).insertAfter($(this));\n          // If enter is pressed, display the current element with the value from\n          // the textarea, and remove the temporary textarea used for editing\n          $(tempTextArea).keypress(function (key) {\n            let keyPressed = key.which;\n            if (keyPressed == 13) {\n              currentElement.html($(this).val());\n              $(this).remove();\n              currentElement.removeClass(\"hidden\");\n            }\n          });\n        }\n      });\n      // Adding a new image from the bulma navbar menu based on the selected size\n      $(\"#image a\").click(function () {\n        // Checking to see if the element has already been clicked. If the element\n        // has been clicked, wait until the new photo is added to the builder page\n        if ($(this).hasClass(\"clicked\") == false) {\n          // Adding a class to show that the element has been clicked\n          $(this).addClass(\"clicked\");\n          // A variable to keep track of the original html in the bulma navbar menu\n          let currentHTML = $(this).html();\n          // Expanding the bulma navbar \"New Image...\" link so the user can see the\n          // image url that they are entering\n          $(\"#new-image-link\").addClass(\"expand-link\");\n          // Adding a new input field inside the navbar item for the user to enter\n          // their image url\n          $(this).html(\n            '<input id=\"tempImgInput\" class=\"input is-small\" type=\"text\" placeholder=\"Enter Image URL\">'\n          );\n          // When enter is pressed, create the new image based on the selected size\n          $(this).keypress(function (key) {\n            let keyPressed = key.which;\n            if (\n              keyPressed == 13 &&\n              typeof $(this).children().val() !== \"undefined\"\n            ) {\n              \n              let url = $(this).children().val();\n              count++;\n              addImage(currentHTML, url, count, currentElement);\n              $(\"#new-image-link\").removeClass(\"expand-link\");\n              $(this).html(currentHTML);\n              $(this).removeClass(\"clicked\");\n            } else if (keyPressed == 13) {\n              $(\"#new-image-link\").removeClass(\"expand-link\");\n              $(this).html(currentHTML);\n              $(this).removeClass(\"clicked\");\n            }\n          });\n          // Focusing on the input field\n          $(\"#tempImgInput\").focus();\n        }\n      });\n\n      // Adding a new chart from the bulma navbar menu based on the selected chart\n      $(\"#charts a\").click(function () {\n        // Checking to see if the element has already been clicked. If the element\n        // has been clicked, wait until the new photo is added to the builder page\n        if ($(this).hasClass(\"clicked\") == false) {\n          // Adding a class to show that the element has been clicked\n          $(this).addClass(\"clicked wrap-text\");\n\n          // A variable to keep track of the original html in the bulma navbar menu\n          let parentID = $(this).attr(\"id\");\n          let currentHTML = $(this).html();\n\n          // Expanding the bulma navbar \"New Image...\" link so the user can see the\n          // image url that they are entering\n          $(\"#new-chart-link\").addClass(\"expand-link\");\n\n          // Adding a new input field inside the navbar item for the user to enter\n          // their datapoints when they implement a chart\n          $(this).html(\"\");\n\n          // Appending the title input field\n          if (parentID != \"scatter-plot-3d\") {\n            $(this).append(\n              'Title: <input id=\"tempTitleInput\" class=\"input is-small\" type=\"text\" placeholder=\"Enter Title\">'\n            );\n          }\n\n          // Appending the x and y input fields\n          $(this).append(\n            'x-values: <input id=\"tempXInput\" class=\"input is-small\" type=\"text\" placeholder=\"Usage: 1,2,3,4,...\">'\n          );\n          $(this).append(\n            'y-values: <input id=\"tempYInput\" class=\"input is-small\" type=\"text\" placeholder=\"Usage: 1,2,3,4,...\">'\n          );\n\n          // Appending the z input field if the user selects the 3D scatter plot\n          if (parentID == \"scatter-plot-3d\") {\n            $(this).append(\n              'z-values: <input id=\"tempZInput\" class=\"input is-small\" type=\"text\" placeholder=\"Usage: 1,2,3,4,...\">'\n            );\n          }\n\n          // Appending the button that when clicked, will dynamically generate the chart\n          $(this).append(\n            '<button id=\"tempChartButton\" class=\"button is-small\">Generate</button>'\n          );\n\n          // When the dynamic button is clicked, call the function that will generate the corresponding chart\n          $(document).on(\"click\", \"#tempChartButton\", function () {\n            let title = $(\"#tempTitleInput\").val();\n            let x = $(\"#tempXInput\").val();\n            let y = $(\"#tempYInput\").val();\n\n            if (parentID == \"scatter-plot-2d\") {\n              count++;\n              add2DPlot(title, x, y, count, currentElement);\n            } else if (parentID == \"bar-chart\") {\n              count++;\n              addBarChart(title, x, y, count, currentElement);\n            } else if (parentID == \"scatter-plot-3d\") {\n              let z = $(\"#tempZInput\").val();\n              count++;\n              add3DPlot(title, x, y, z, count, currentElement);\n            }\n\n            // Setting the navbar back to normal\n            $(\"#new-chart-link\").removeClass(\"expand-link\");\n            $(`#${parentID}`).html(currentHTML);\n            $(`#${parentID}`).removeClass(\"clicked wrap-text\");\n          });\n        }\n      });\n    },\n    mobilejs() {\n      $(\".navbar-burger\").click(function () {\n        $(\".navbar-burger\").toggleClass(\"is-active\");\n        $(\".navbar-menu\").toggleClass(\"is-active\");\n      });\n    },\n    // https://www.w3schools.com/jsref/event_onbeforeunload.asp\n    //this gives a refresh warning so you dont loose progress by acciendtly reloading\n    reloadWarning(){\n      window.onbeforeunload = function() {\n        return \"Reloading this page will lead to loosing work that has not been exported\";\n    };\n    },\n  },\n};\n</script>\n\n<style lang =\"css\">\n#import_box h1 {\n  font-size: 2em;\n  font-weight: bold;\n}\n#import_box h1:hover,\n#import_box p:hover,\n#import_box a:hover,\n#import_box img:hover {\n  border: 1px solid black;\n  border-radius: 5px;\n}\n#import_box h1,\n#import_box p,\n#import_box a,\n#import_box img {\n  border: 1px solid transparent;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  word-wrap: break-word;\n}\n/* The currently selected element */\n.current {\n  background: rgb(206, 206, 206);\n  border-radius: 5px;\n}\n/* This class hides an element when it is being edited*/\n.hidden {\n  display: none;\n}\n/* These classes are used to align text */\n.align-left {\n  text-align: left;\n}\n.align-centre {\n  text-align: center;\n\n}\n.align-right {\n  text-align: right;\n}\n.SBS{\n  float:left\n\n}\n/* This class is used to expand the navbar section when the user inputs a link */\n.expand-link {\n  width: 35rem;\n}\n/* These classes are used to size different images */\n.Small {\n  width: 10.0%;\n  height: auto;\n}\n.Medium {\n  width: 20.0%;\n  height: auto;\n}\n.Large {\n  width: 30.0%;\n  height: auto;\n}\n/* These classes are used to change the font of an element */\n.bold-font {\n  font-weight: bold;\n}\n.italic-font {\n  font-style: italic;\n}\n.underline-font {\n  text-decoration: underline;\n}\n\n/* This class is used to allow multiple lines in a navbar item */\n.wrap-text {\n  flex-wrap: wrap;\n}\n\n.modal {\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n/* Theses classes are used to change the look of save and new page modals */\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  width: 80%;\n  border-radius: 10px;\n}\n\n.modalPosition {\n  margin-top: -14%;\n}\n\n#content {\n  margin-top: 30%;\n}\n\n/* used to format the import, export, cancel buttons */\n#file-import {\n  margin: 0;\n  margin-right: 7px;\n}\n#Exporting,\n#file-import {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n#exportButtons {\n  margin-top: 10px;\n}\n\n/* these classes formats the cancel and save button within the new file modal */\n#cancelNewFile {\n  margin-left: 15px;\n}\n#cancel {\n  margin-left: 15px;\n}\n\n/* formats the \"Display Code\" button */\n.button {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n</style>\n"]}]}